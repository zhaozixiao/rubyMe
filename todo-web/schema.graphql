input AUTH_PROVIDER_CREDENTIALS {
  email: String!
  password: String!
}

input AuthProviderSignupData {
  credentials: AUTH_PROVIDER_CREDENTIALS
}

"""Autogenerated input type of CreateTodo"""
input CreateTodoInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  description: String!
  reference: String!
}

"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
  authProvider: AuthProviderSignupData
}

type Mutation {
  createTodo(
    """Parameters for CreateTodo"""
    input: CreateTodoInput!
  ): Todo
  createUser(
    """Parameters for CreateUser"""
    input: CreateUserInput!
  ): User
  signinUser(
    """Parameters for SignInUser"""
    input: SignInUserInput!
  ): SignInUserPayload
  updateTodo(
    """Parameters for UpdateTodo"""
    input: UpdateTodoInput!
  ): Todo
}

type Query {
  allTodos: [Todo!]!
}

"""Autogenerated input type of SignInUser"""
input SignInUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  credentials: AUTH_PROVIDER_CREDENTIALS
}

"""Autogenerated return type of SignInUser"""
type SignInUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  token: String
  user: User
}

type Todo {
  description: String!
  id: ID!
  reference: String!
  status: String!
}

"""Autogenerated input type of UpdateTodo"""
input UpdateTodoInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: String!
  id: ID!
  description: String
  status: String
}

type User {
  email: String!
  id: ID!
  name: String!
}

